- hosts: all

  tasks:
    - name: Set the Service URL
      set_fact:
        svc_url: "/api/{{ manageiq.service }}"
    - debug: var=svc_url
    
    - name: set the uuid to match
      set_fact: new_vm_uuid="8e9eaf5d-c8f9-4947-8a74-61f5bcaaa1d6"
    - debug: var=new_vm_uuid

    - set_fact: find_vm_url="{{ manageiq.api_url }}/api/vms?expand=resources&attributes=href,uid_ems&filter[]=uid_ems='{{ new_vm_uuid }}'"
    - debug: var=find_vm_url
    
    - name: Call to CloudForms to find href for new_vm_uuid
      uri:
        url: "{{ find_vm_url }}"
        method: GET
        validate_certs: no
        headers:
           X-Auth-Token: "{{ manageiq.api_token }}"
           Content-Type: "application/json"
        body_format: json
        return_content: yes
      register: token_output
    - debug: var=token_output

    - set_fact: cf_vm_href="{{ token_output.json.resources[0].href }}"
    - debug: var=cf_vm_href

    - name: Create an array of vms
      set_fact:
        vms: "{{ vms|default([]) + [ { 'href': svc_url, 'resource':  { 'href': item } } ] }}"
      with_items:
        - "{{ cf_vm_href }}"
    - debug: var=vms
        
    - name: Register vm with the service
      uri:
        url: "{{ manageiq.api_url }}/api/services"
        method: POST
        body_format: json
        body:
          action: add_resource
          resources : "{{ vms }}"
        validate_certs: False
        headers:
          X-Auth-Token: "{{ manageiq.api_token }}"
          Content-Type: "application/json"
        status_code: 200
      register: output

    - debug: var=output.json.results[0].success
